



eureka.instance.hostname=${vcap.application.uris[0]:localhost}
eureka.instance.nonSecurePort=80
eureka.instance.metadataMap.instanceId=${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
eureka.instance.leaseRenewalIntervalInSeconds = 5

eureka.client.region = default
eureka.client.registryFetchIntervalSeconds = 5
# In this configuration, the Spring Cloud Eureka client knows to connect to the Eureka instance running on localhost if 
# Cloud Foundry’s VCAP_SERVICES environment variable doesn’t exist or contain valid credentials.
eureka.client.serviceUrl.defaultZone=${vcap.services.eureka-service.credentials.uri:http://127.0.0.1:8761}/eureka/


#spring.zipkin.base-url=${vcap.services.zipkin-service.credentials.uri}
spring.rabbitmq.addresses=${vcap.services.reservations-rabbitmq.credentials.uri}
#spring.rabbitmq.addresses = ${vcap.services.reservations-rabbitmq.credentials.uri}
#spring.rabbitmq.host=${vcap.services.reservations-rabbitmq.credentials.uri}
